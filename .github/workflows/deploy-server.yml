name: Deploy Server
run-name: Deploy Server. Run by ${{ github.actor }}
on: [workflow_dispatch]
env:
  FOLDER_NAME: scaled-frames
jobs:
  deploy-server:
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
      
      - name: Add Known Hosts
        # removing the `user@` from the ec2_host
        run: |
          ssh-keyscan -H "$(echo ${{ secrets.EC2_HOST }} | awk -F@ '{print $2}')" >> ~/.ssh/known_hosts
      
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          path: ${{ env.FOLDER_NAME }}

      # Going into folder, creating an .env
      - name: Create .env file
        run: |
          cd ${{ env.FOLDER_NAME }}
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "DIRECT_DB_URL=${{ secrets.DIRECT_DB_URL }}" >> .env
          echo "SUPABASE_SERVICE_ROLE_KEY=${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" >> .env
          echo "SUPABASE_JWT_SECRET=${{ secrets.SUPABASE_JWT_SECRET }}" >> .env
          echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}" >> .env
          echo "NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}" >> .env
          echo "NEXT_PUBLIC_CLIENT_URL=${{ secrets.NEXT_PUBLIC_CLIENT_URL }}" >> .env
          echo "NEXT_PUBLIC_API_FRAMER_URL=${{ secrets.NEXT_PUBLIC_API_FRAMER_URL }}" >> .env
          echo "NEXT_PUBLIC_API_FRAMER_PORT=${{ secrets.NEXT_PUBLIC_API_FRAMER_PORT }}" >> .env
      
      - name: Transfer Repository to EC2
        run: |
          tar -czf repo.tar.gz ${{ env.FOLDER_NAME }}
          scp -i ~/.ssh/id_rsa repo.tar.gz ${{ secrets.EC2_HOST }}:~/repo.tar.gz

      - name: Extract Repository on EC2
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_HOST }} << 'EOF'
            # Remove the folder if its still there
            rm -rf ${{ env.FOLDER_NAME }}
            tar -xzf repo.tar.gz
            rm repo.tar.gz
          EOF
      
      - name: Run install script on EC2
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_HOST }} 'bash ${{ env.FOLDER_NAME }}/scripts/install.sh'

      - name: Run build/deploy script on EC2
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_HOST }} 'bash ${{ env.FOLDER_NAME }}/scripts/deploy.sh'